version: 2

sources:
  - name: asana
    database: "{{var ('asana_database', target.database)}}"
    schema: "{{var ('asana_schema', 'asana')}}"

    loader: fivetran
    loaded_at_field: _fivetran_synced
      
    freshness:
      warn_after: {count: 72, period: hour}
      error_after: {count: 96, period: hour}


    tables:
      - name: user
        description: Table of all accounts in the organization
        freshness: null
        columns:
          - name: id
            description: Identifier for individual user
            tests:
                - unique
                - not_null
          - name: email
            description: Email associated with the user
            tests:
              - not_null: # Asana notifications are by default also sent to the email
                  severity: warn
          - name: name
            description: Given name for the user as it appears in the UI
            tests:
              - not_null: # All users should have names
                  severity: warn
              

      - name: task
        description: Table containing all tasks ever opened in this workspace
        columns:
          - name: id
            description: System generated unique identifier for the task # in url? 
            tests:
              - unique
              - not_null
          - name: assignee_id
            description: Foreign key referncing the USER assigned to this task (some tasks may not have an assignee)
          - name: assignee_status
            description: Scheduling status for the assignee that the task is or will eventually be assigned to. This maps to the sections of a user's inbox
            tests:
              - accepted_values:
                  values: ['inbox', 'today', 'upcoming', 'later', 'new'] # these should be the only options regardless of if there's an assignee or due date
          - name: completed
            description: Boolean that's true if the task is *currently* marked completed. A task can be unmarked 
          - name: completed_at
            description: Date-time at which the task was completed, if still currently completed.
          - name: completed_by_id
            description: Foreign key that references the USER who completed the task, if currently completed.
          - name: created_at
            description: When the task was first made
            tests:
              - not_null
          - name: due_on
            description: The date on which the task is due. Not all tasks may have a due date
          - name: due_at
            description: The date and time at which the task is due, if a particular time is given. 
          - name: modified_at
            description: The last time the task was updated. Does not include comments nor changes in associations (ie projects)
          - name: name
            description: The title of the task
          - name: notes
            description: Free-form textual information associated with the task # descriptions included?
          - name: parent_id
            description: The ID of the parent of the task, if it is a subtask. Self-refers to TASK
          - name: start_on
            description: The start date of the task, if inputted with the due date. 


      - name: project
        description: Table containing all projects, which contain lists or a board of prioritized tasks
        columns:
          - name: id
            description: System generated unique ID of the project
            tests:
              - unique
              - not_null
          - name: is_archived
            description: Boolean representing whether the project has been archived (removed from asana UI)
          - name: created_at
            description: Date-time at which the story was made/the action was logged
            tests:
              - not_null
          - name: current_status
            description: The most recent progress status update for the project. This is sent to all project followers
          - name: due_date # deprecated -> due_on
            description: The date the project is due 
          - name: modified_at
            description: The last time the project was updated. Does not include comments nor changes in associations (ie tasks)
          - name: name
            description: The given name of the project
          - name: owner_id
            description: Foreign key referencing the USER who owns the project.
          - name: public
            description: Boolean that is true if the project is public to the whole organization, false if not.
          - name: team
            description: Foreign key referencing the TEAM that the project is shared with.


      - name: story
        description: Table containing all actions (stories) taken on tasks
        columns:
          - name: id
            description: System generated unique ID of the story/action taken
            tests:
              - unique
              - not_null
          - name: created_at
            description: Date-time at which the story was made/the action was logged
            tests:
              - not_null
          - name: created_by_id
            description: Foreign key referencing the USER who created the story/took the action on the task
          - name: target_id
            description: Foreign key referencing the TASK that the story is about.
            tests:
              - not_null
          - name: text
            description: Free-form text describing the action that was taken (if type = system), or the content of a comment (if type = comment)
          - name: type # deprecated as of feb 2019 -> resource_subtype
            description: The origin type of the story - a comment or change to the backend (altering a task)


      - name: team
        description: Table of the teams within the organization
        columns:
          - name: id
            description: System generated unique ID for each team
            tests:
              - unique
              - not_null
          - name: name
            description: Provided name for each team
            tests:
              - unique: # Raise warning of duplicate team accounts 
                  severity: warn


      - name: tag
        description: Table of the custom tags made in the organization
        freshness: null
        columns:
          - name: id
            description: System generated ID for each tag
            tests:
              - unique
              - not_null
          - name: name
            description: The name of the tag as it appears in the UI
            tests:
              - unique: # Raise warning of duplicate tags
                  severity: warn
          - name: created_at
            description: Time when the tag was created
            tests:
              - not_null
        

      - name: section
        description: Table of all sections within projects. If a project has no section in the UI, it is still stored here with name = (no section)
        columns:
          - name: id
            description: System generated unique ID for each section
            tests:
              - unique
              - not_null
          - name: created_at
            description: Timestamp when the section was created by a user
            tests:
              - not_null
          - name: name
            description: The given name of the section as it appears in the UI. Is "(no name)" if the project is not sectioned
          - name: project_id
            description: Foreign key referencing the PROJECT that the section lives in
            tests:
              - not_null

      - name: project_task
        description: Table of tasks and the project(s) they each belong to. If a project doesn't have a task, it won't be in here (and vice versa)
        freshness: null
        tests:
          - dbt_utils.unique_combination_of_columns:
                combination_of_columns: 
                - project_id
                - task_id
        columns:
          - name: project_id
            description: Foreign key referencing a PROJECT the task belongs to
          - name: task_id
            description: Foreign key referncing the TASK in the project


      - name: task_follower
        description: Table of tasks with the users that are following them. 
        freshness: null
        tests:
          - dbt_utils.unique_combination_of_columns:
                combination_of_columns: 
                - task_id
                - user_id
        columns:
          - name: task_id
            description: Foreign key referencing the TASK being followed
          - name: user_id
            description: Foreign key referencing the USER that is following the task

              
      - name: task_tag
        description: Table of tasks with the tags attached to them. Tasks without tags (and vice versa) do not appear here.
        tests:
          - dbt_utils.unique_combination_of_columns:
                combination_of_columns: 
                - task_id
                - tag_id
        columns:
          - name: task_id
            description: Foreign key referencing the TASK that is tagged
          - name: tag_id
            description: Foreign key referencing the TAG that is applied to the task
            

      - name: task_section
        description: Table relating tasks to the sections they belong to. Tasks without sections do not appear here, but tasks within a *section-less project* (where section.name = (no section)) do show up.
        tests:
          - dbt_utils.unique_combination_of_columns:
                combination_of_columns: 
                - section_id
                - task_id
        columns:
          - name: section_id
            description: Foreign key referencing the SECTION that the task lives under.
          - name: task_id
            description: Foreign key referencing the TASK that lives in a section.